import re
from typing import List

PATTERN = r'^{|}$'


def validate_text(test_text: str, list_keys: List[str]) -> str:
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–∫–æ–±–æ–∫ –≤ –∫–ª—é—á–µ
    –∏ –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–∞ –≤ —Ç–µ–∫—Å—Ç–µ.
    """
    for key in list_keys:
        if re.search(PATTERN, key):
            raise ValueError(f'–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å–∫–æ–±–∫–∏ –≤ {key}')
        else:
            if not re.findall(key, test_text):
                raise KeyError(f"{key} –Ω–µ—Ç –≤ —Ç–µ–∫—Å—Ç–µ!")
    return test_text
            

def test_validate_text():
    '''
    –¢–µ—Å—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–∞ –≤ —Ç–µ–∫—Å—Ç–µ.
    '''
    test_text = '''{name}, –≤–∞—à–∞ –∑–∞–ø–∏—Å—å –∏–∑–º–µ–Ω–µ–Ω–∞:
    ‚åöÔ∏è {day_month} –≤ {start_time}   
    üë© {master}
    –£—Å–ª—É–≥–∏:
    {services}
    —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å—å—é {record_link}'''
    
    list_keys = ['name', 'day_month', 'day_of_week', 'start_time', 'end_time', 'master', 'services']
    error = 'day_of_week –Ω–µ—Ç –≤ —Ç–µ–∫—Å—Ç–µ!'
    assert validate_text(test_text, list_keys) == error


def test_validate_staples():
    '''
    –¢–µ—Å—Ç –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞–ª–∏—á–∏—è —Å–∫–æ–±–æ–∫ –≤ –∫–ª—é—á–∞—Ö.
    '''
    test_text = '''{name}, –≤–∞—à–∞ –∑–∞–ø–∏—Å—å –∏–∑–º–µ–Ω–µ–Ω–∞:
    ‚åöÔ∏è {day_month} –≤ {start_time}   
    üë© {master}
    –£—Å–ª—É–≥–∏:
    {services}
    —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å—å—é {record_link}'''
    
    list_keys = ['{name', 'day_month', 'day_of_week', 'start_time', 'end_time', 'master', 'services']
    error = '–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å–∫–æ–±–∫–∏ –≤ {name'
    assert validate_text(test_text, list_keys) == error
